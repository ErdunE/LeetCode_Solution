class Solution 
{
public:
    vector<vector<int> > threeSum(vector<int>& nums) 
    {
        sort(nums.begin(),nums.end());
        vector<vector<int> >res;   
        int _size=nums.size();   
        
        if(_size<3||nums.front()>0||nums.back()<0)
        {
            return res;
        }
        
        int i,j,k;
        
        for(k=0;k<=_size-3;k++)
        {
        	if(nums[k]>0)
            {
                break;
            }
        	if(k>0&&nums[k]==nums[k-1])
            {
                continue; 
            }//跳过无意义移动
            
        	i=k+1;j=_size-1;
            
        	while(i<j)
            {
        		if(nums[i]+nums[j]+nums[k]>0)
                {
                    j--;
                }
        		else if(nums[i]+nums[j]+nums[k]<0)
                {
                    i++;
                }
        		else
                {
        			res.push_back({nums[i],nums[j],nums[k]});
        			while(i<j&&nums[i]==nums[i+1])      //跳过无意义移动
        			    i++;
        			while(i<j&&nums[j]==nums[j-1])      //同上
        			    j--;
        			i++;
        			j--;           //这里可以两边同时缩近
				}
			}
		}
		return res;
    }
};

