/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution 
{
public:
    bool hasCycle(ListNode *head) 
    {
        ListNode* slow = head; //慢指针
        ListNode* fast = head; //快指针
        
        while(fast != NULL && fast->next != NULL) 
        {
            slow = slow->next; //慢走一
            fast = fast->next->next; //快走二
            if(slow == fast) return true; // 如果相遇 有循环
            
            
        } 
        return false; // 如果没相遇 没有循环
    }
};