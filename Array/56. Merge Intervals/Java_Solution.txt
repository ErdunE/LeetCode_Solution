class Solution 
{
    public int[][] merge(int[][] intervals) 
    {
        List<int[]> res = new ArrayList<>();
        if(intervals.length == 0 || intervals == null)
        {
            return res.toArray(new int[0][]);
        }
        
        Arrays.sort(intervals,(a,b)-> a[0] - b[0]); // 对起点终点进行排序
        int i = 0;
        while(i < intervals.length)
        {
            int left = intervals[i][0];
            int right = intervals[i][1];
            while(i<intervals.length-1 && intervals[i+1][0] <= right )  // 如果有重叠，循环判断哪个起点满足条件
            {
                i++;
                right = Math.max(right, intervals[i][1]);
            }
            
            res.add(new int[]{left,right}); // 将现在的区间放进res里面
            i++; // 接着判断下一个区间
        }
        return res.toArray(new int[0][]);
    }
}