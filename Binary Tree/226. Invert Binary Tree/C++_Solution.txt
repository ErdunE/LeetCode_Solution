/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    TreeNode* invertTree(TreeNode* root) 
    {
        if(!root) 
        {
            return {};
        }
        
        TreeNode* right = invertTree(root->right);//创建一个right变量储存右子树翻转的结果；
        TreeNode* left = invertTree(root->left); //创建一个left变量储存左子树的翻转结果；
        
        root -> right = left; //将翻转好的右子树赋值给根节点的左子树
        root -> left = right; //将翻转好的左子树赋值给根节点的右子树
        
        return root;
        
    }
};