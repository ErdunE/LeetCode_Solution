/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    vector<int> preorderTraversal(TreeNode* root) 
    {
        if(!root)// 若root为空 结束
        {
            return {};
        }
        
        vector<int> res;
        stack<TreeNode*> str;
        TreeNode* node = root;
        
        while(!str.empty() || node != nullptr)
        {
            while(node != nullptr)
            {
                res.push_back(node -> val);
                str.push(node);
                node = node -> left;
            }
            node = str.top();
            str.pop();
            node = node -> right;
        }       
        return res;
               
    }
};