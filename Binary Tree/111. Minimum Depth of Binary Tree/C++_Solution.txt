/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    int minDepth(TreeNode* root) 
    {
        if(!root)//空集直接结束
        {
            return 0;
        }
        
        int left = minDepth(root -> left); //计算左子树深度
        int right = minDepth(root -> right); //计算右子树深度
        
        if(!left || !right) //如果空左或空右子树 等于 根 + 1
        {
            return left + right + 1;
        }
        return min(left, right) + 1; //根 + 最小子树深度
    }
};