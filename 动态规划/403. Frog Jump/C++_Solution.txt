class Solution 
{
public:
    bool canCross(vector<int>& stones) 
    {
        int n = stones.size();
        unordered_map<int,int> mp;
        for(int i = 0; i<n ; i++)
        {
            mp[stones[i]] = i;
        }
        
        int dp[n+10][n+10];
        memset(dp,0,sizeof(dp));
        
        if(stones[1] != 1)
        {
            return false;
        }
        dp[1][0] = 1;
        
        for(int i=1 ; i<n-1 ;i++)
        {
            for(int j=0 ; j<i ; j++)
            {
                if(dp[i][j]==1)
                {
                    int dis = stones[i]-stones[j];
                    for(int k = -1 ; k<=1 ; k++)
                    {
                        int next = dis + k;
                        if(next > 0 && mp[stones[i] + next] >0)
                        {
                            dp[mp[stones[i]+next]][i] = 1;
                        }
                    }
                }
            }
        }
        for(int i=0 ; i<n-1 ; i++)
        {
            if(dp[n-1][i] == 1)
            {
                return true;
            }
        }
        
        return false;
    }
};